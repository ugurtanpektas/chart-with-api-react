{"version":3,"sources":["actions/userAction.js","components/Login.js","actions/chartAction.js","actions/generalAction.js","components/Navbar.js","components/Sidebar.js","config.js","components/Overlay.js","components/Home.js","components/Hourly.js","components/PrivateRoute.js","App.js","reportWebVitals.js","reducers/chartReducer.js","reducers/userReducer.js","reducers/generalReducer.js","Reducers.js","index.js"],"names":["userAction","type","payload","Login","componentDidMount","handleLogin","e","a","preventDefault","props","sessionStorage","setItem","history","push","className","onSubmit","this","name","placeholder","required","React","Component","connect","state","userState","users","dispatch","bindActionCreators","chartAction","generalAction","Navbar","toggleMobileMenu","logout","onClick","generalState","generals","Sidebar","mobileMenuOpened","to","settings","Overlay","options","hAxis","title","vAxis","Home","fetch","config","apiUrl","city","apiKey","units","getWeatherCall","json","response","setDailyData","label","list","forEach","wheaterElement","item","Date","dt","main","temp","chartHtml","chartState","loading","chartType","data","dailyData","width","height","controls","controlType","filterColumnLabel","ui","format","pattern","charts","setHourlyData","hourly","feels_like","hourlyData","legendToggle","PrivateRoute","component","authed","rest","render","getItem","pathname","from","location","App","basename","process","path","isLoggedIn","exact","Hourly","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","email","Reducers","combineReducers","action","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d6f93dff.chunk.js","sourcesContent":["export function userAction(type, payload){\n    return{\n        type:type,\n        payload:payload\n    }\n}","import React from \"react\";\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {userAction} from './../actions/userAction';\n\nclass Login extends React.Component{\n    \n    componentDidMount = () => {\n        \n    }\n\n    handleLogin = async (e) => {\n        e.preventDefault();\n        this.props.userAction('SET_LOGGED_IN',true);\n        sessionStorage.setItem('isLoggedIn', true);\n        this.props.history.push('/');\n    }\n    render(){\n       return (\n            <div className=\"login-container\">\n                <form onSubmit={this.handleLogin}>\n                    <div>\n                        <p>This is mock login. U can use any email and password for login</p>\n                        <input type=\"email\" name=\"email\" placeholder=\"Email address\" required/>\n                        <input type=\"password\" name=\"password\" placeholder=\"Password - 12345\" required/>\n                        <button type=\"submit\">Login</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        userState: state.users\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return bindActionCreators({\n        userAction : userAction\n    }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Login);","export function chartAction(type, payload){\n    return{\n        type:type,\n        payload:payload\n    }\n}","export function generalAction(type, payload){\n    return{\n        type:type,\n        payload:payload\n    }\n}","import React from \"react\";\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {generalAction} from './../actions/generalAction';\nimport { userAction } from \"../actions/userAction\";\nclass Navbar extends React.Component{\n\n    componentDidMount(){\n        \n    }\n\n    toggleMobileMenu = (e) => {\n        this.props.generalAction('TOGGLE_MOBILE_MENU', true);\n    }\n\n    logout = () => {\n        this.props.userAction('SET_LOGGED_IN',false);\n        sessionStorage.setItem('isLoggedIn', false);\n    }\n\n    render(){\n       return (\n            <div className=\"top-header\">\n                <div>\n                    <div className=\"mobile-menu\" onClick={this.toggleMobileMenu}>\n                        <i className=\"fa fa-bars\"></i>\n                    </div>\n                    <div className=\"logo\">\n                        Chart Dashboard\n                    </div>\n                </div>\n                <div>\n                    <div className=\"logout\" onClick={this.logout}> Logout</div>\n                </div>\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        generalState: state.generals\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return bindActionCreators({\n        generalAction : generalAction,\n        userAction : userAction\n    }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Navbar);","import React from \"react\";\nimport {Link} from 'react-router-dom';\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport { generalAction } from \"../actions/generalAction\";\n\nclass Sidebar extends React.Component{\n\n    componentDidMount(){\n        \n    }\n\n    toggleMobileMenu = (e) => {\n        this.props.generalAction('TOGGLE_MOBILE_MENU', true);\n    }\n\n    render(){\n       return (\n            <div className={`sidebar ${this.props.generalState.mobileMenuOpened ? \"open\" : \"\"}`} >\n                <ul>\n                    <li><Link to=\"/\" onClick={this.toggleMobileMenu}><i className=\"fa fa-cloud\"></i> Daily Weather Forecast </Link></li>\n                    <li><Link to=\"/hourly\" onClick={this.toggleMobileMenu}><i className=\"fa fa-clock-o\"></i> Hourly Weather Forecast </Link></li>\n                </ul>\n            </div>\n        )\n    }\n}\nfunction mapStateToProps(state){\n    return{\n        generalState: state.generals\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return bindActionCreators({\n        generalAction : generalAction\n    }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Sidebar);","const settings = {\n    \"apiUrl\" : \"https://api.openweathermap.org/\",\n    \"apiKey\" : \"697de474ea3fd0b3bcff994155b5e4b5\",\n    \"units\" : \"metric\",\n    \"city\" : \"Berlin\"\n}\n\nexport default settings;","import React from \"react\";\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {generalAction} from './../actions/generalAction';\nclass Overlay extends React.Component{\n\n    componentDidMount(){\n        \n    }\n\n    toggleMobileMenu = (e) => {\n        this.props.generalAction('TOGGLE_MOBILE_MENU', true);\n    }\n\n    logout = () => {\n        this.props.userAction('SET_LOGGED_IN',false);\n        sessionStorage.setItem('isLoggedIn', false);\n    }\n\n    render(){\n       return (\n        <div className={`overlay ${this.props.generalState.mobileMenuOpened ? \"open\" : \"\"}`} onClick={this.toggleMobileMenu}></div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        generalState: state.generals\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return bindActionCreators({\n        generalAction : generalAction\n    }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Overlay);","import React from \"react\";\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {userAction} from './../actions/userAction';\nimport {chartAction} from './../actions/chartAction';\nimport Navbar from './../components/Navbar';\nimport Sidebar from './../components/Sidebar';\nimport { Chart } from \"react-google-charts\";\n\nimport config from \"./../config\";\nimport Overlay from \"./Overlay\";\n\nconst options = {\n    hAxis: { title: \"Date\"},\n    vAxis: { title: \"Temp. (Celsius)\" }\n  };\n\nclass Home extends React.Component{\n\n    async componentDidMount(){\n        this.props.chartAction('LOADING', true);\n        const getWeatherCall = await fetch(config.apiUrl+'data/2.5/forecast?q='+config.city+'&appid='+config.apiKey+'&units='+config.units);\n        const response = await getWeatherCall.json();\n        let setDailyData = [[{type :'date', label:'Day'}, 'Temp (C)']];\n        response.list.forEach(wheaterElement => {\n            let item = [new Date(wheaterElement.dt * 1000), wheaterElement.main.temp];\n            setDailyData.push(item);\n        });\n        this.props.chartAction('SET_DAILY_DATA', setDailyData);\n    }\n\n    render(){\n       let chartHtml;\n       if(this.props.chartState.loading){\n            chartHtml = (\n                <div className=\"loading\"> Loading...</div>\n            )\n       }\n       else{\n            chartHtml = (\n                <Chart\n                    chartType=\"LineChart\"\n                    data={this.props.chartState.dailyData}\n                    options={options}\n                    width=\"100%\"\n                    height=\"400px\"\n                    controls={[\n                        {\n                          controlType: 'DateRangeFilter',\n                          options: {\n                            filterColumnLabel: 'Day',\n                            ui: { format: { pattern: 'dd' } },\n                          },\n                        },\n                      ]}\n                    />\n            )\n       }\n\n       return (\n            <div className=\"App\">   \n                <Navbar />\n                <Sidebar />\n                <div className=\"main\">\n                    <h1>Daily Temp. in Berlin</h1>\n                    {chartHtml}\n                </div>\n                <Overlay />\n            </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        userState: state.users,\n        chartState: state.charts\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return bindActionCreators({\n        userAction : userAction,\n        chartAction : chartAction\n    }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Home);","import React from \"react\";\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {userAction} from './../actions/userAction';\nimport {chartAction} from './../actions/chartAction';\nimport Navbar from './../components/Navbar';\nimport Sidebar from './../components/Sidebar';\nimport { Chart } from \"react-google-charts\";\n\nimport config from \"./../config\";\nimport { generalAction } from \"../actions/generalAction\";\nimport Overlay from \"./Overlay\";\n\nconst options = {\n    hAxis: { title: \"Date\"},\n    vAxis: { title: \"Temp. (Celsius)\" }\n  };\n\nclass Home extends React.Component{\n\n    async componentDidMount(){\n        this.props.chartAction('LOADING', true);\n        const getWeatherCall = await fetch(config.apiUrl+'data/2.5/onecall?lat=52.520008&lon=13.404954&appid='+config.apiKey+'&units='+config.units+'&exclude=daily,minutely,daily,alerts');\n        const response = await getWeatherCall.json();\n        \n        let setHourlyData = [[{type :'date', label:'Hour'}, 'Temp (C)', 'Feels Like']];\n        response.hourly.forEach(wheaterElement => {\n            let item = [new Date(wheaterElement.dt * 1000), wheaterElement.temp, wheaterElement.feels_like];\n            setHourlyData.push(item);\n        });\n        this.props.chartAction('SET_HOURLY_DATA', setHourlyData);\n        \n    }\n\n    render(){\n        let chartHtml;\n        if(this.props.chartState.loading){\n             chartHtml = (\n                 <div className=\"loading\"> Loading...</div>\n             )\n        }\n        else{\n             chartHtml = (\n                 <Chart\n                     chartType=\"LineChart\"\n                     data={this.props.chartState.hourlyData}\n                     options={options}\n                     width=\"100%\"\n                     height=\"400px\"\n                     legendToggle\n                     />\n             )\n        }\n       return (\n        <div className=\"App\">   \n            <Navbar />\n            <Sidebar />\n            <div className=\"main\">\n            <h1>Hourly Temp. in Berlin</h1>\n            {chartHtml}\n            </div>\n            <Overlay />\n        </div>\n        )\n    }\n}\n\nfunction mapStateToProps(state){\n    return{\n        userState: state.users,\n        chartState: state.charts,\n        generalState: state.generals\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return bindActionCreators({\n        userAction : userAction,\n        chartAction : chartAction,\n        generalAction : generalAction\n    }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (Home);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst PrivateRoute = ({ component: Component, authed, ...rest }) => {\n    return (\n        <Route { ...rest } render={ props => (\n            authed === true || sessionStorage.getItem('isLoggedIn') === 'true' ? \n            <Component {...props} /> : \n            <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n        ) }\n        />\n    );\n};\n\nexport default PrivateRoute;","import React from \"react\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\nimport {bindActionCreators} from 'redux';\nimport {connect} from 'react-redux';\nimport {userAction} from './actions/userAction';\n\nimport Login from \"./components/Login\";\nimport Home from \"./components/Home\";\nimport Hourly from \"./components/Hourly\";\nimport PrivateRoute from \"./components/PrivateRoute\"\n\nclass App extends React.Component{\n\n  componentDidMount(){\n\n  }\n\n  render(){\n     return (\n      <Router basename={process.env.PUBLIC_URL}>\n      <div className=\"App\">      \n        <Route path='/login' component={Login} />\n        <PrivateRoute authed={this.props.userState.isLoggedIn} exact path='/' component={Home} />\n        <PrivateRoute authed={this.props.userState.isLoggedIn} exact path='/hourly' component={Hourly} />\n      </div>\n      </Router>\n      )\n  }\n}\n\nfunction mapStateToProps(state){\n  return{\n      userState: state.users\n  }\n}\n\nfunction mapDispatchToProps(dispatch){\n  return bindActionCreators({\n      userAction : userAction\n  }, dispatch)\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (App);","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n    hourlyData:[],\n    dailyData:[],\n    loading:true\n};\n\nexport default function chartReducer(state = initialState, action){\n    switch(action.type){\n        case 'LOADING':\n            return {...state, loading:true};\n        case 'SET_DAILY_DATA':\n            return {...state, loading:false, dailyData:action.payload};\n        case 'SET_HOURLY_DATA':\n            return {...state, loading:false, hourlyData:action.payload};\n        default:\n            return state;\n    }\n}","const initialState = {\n    email:null,\n    isLoggedIn : false,\n    loading:true\n};\n\nexport default function userReducer(state = initialState, action){\n    switch(action.type){\n        case 'LOADING':\n            return {...state, loading:true};\n        case 'SET_EMAIL':\n            return {...state, loading:false, email:action.payload};\n        case 'SET_LOGGED_IN':\n            return {...state, loading:false, isLoggedIn:action.payload};\n        default:\n            return state;\n    }\n}","const initialState = {\n    mobileMenuOpened:false\n};\n\nexport default function generalReducer(state = initialState, action){\n    switch(action.type){\n        case 'TOGGLE_MOBILE_MENU':\n            return {...state, mobileMenuOpened:!state.mobileMenuOpened};\n        default:\n            return state;\n    }\n}","import {combineReducers} from 'redux';\nimport chartReducer from './reducers/chartReducer';\nimport userReducer from './reducers/userReducer';\nimport generalReducer from './reducers/generalReducer';\n\nconst Reducers = combineReducers({\n    users:userReducer,\n    charts:chartReducer,\n    generals:generalReducer\n})\n\nexport default Reducers;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Reducers from './Reducers';\nimport { createStore } from 'redux';\nimport {Provider} from 'react-redux';\n\nimport './main.scss';\nimport 'font-awesome/css/font-awesome.min.css';\n\nconst store = createStore(Reducers);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}